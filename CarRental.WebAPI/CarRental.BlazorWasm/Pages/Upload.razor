@page "/upload";
@using System.Net.Http.Headers
@using CarRental.BlazorWasm.Services.ItemService

@inject ApiService apiService
@inject UserService userService

<section class="h-custom">
    <div class="container-fluid">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <h1 style="padding: 50px; text-align: center;">Upload your Document</h1>
        </div>
        <div class="row d-flex justify-content-center align-items-center h-100">
            <p style="text-align: center; margin-top: -30px;">Click on the botton below to upload your document.</p>
        </div>
    </div>
</section>

<section class="uplcls">
    <InputFile max-file-size="1536000" accept=".png,.jpg,.jpeg" OnChange="@UploadPhoto" single />
    <button class="btn" @onclick="UploadDocument">Upload Document</button>
</section>
<p>@successMessage</p>
<p>@errorMessage</p>

<div style="display: none">
    <input @bind="PhotoUrl" type="text" />
</div>

<style>
    .uplcls {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 20px;
        margin-top: 50px;
        background: whitesmoke;
        height: 350px;
        width: 350px;
        margin-left: auto;
        margin-right: auto;
    }

    .btn {
        border-radius: 20px;
        background: whitesmoke;
        width: 150px;
        height: 150px;
        font-size: 24px;
        padding: 16px;
    }
</style>

@code {
    private string PhotoUrl { get; set; }

    private string errorMessage { get; set; }
    private string successMessage { get; set; }
    public async void UploadPhoto(InputFileChangeEventArgs e)
    {
        try
        {
            var file = e.File;
            var filename = file.Name;
            var fileContent = new StreamContent(file.OpenReadStream(maxAllowedSize: 1024 * 1000));
            fileContent.Headers.ContentDisposition = new("form-data") { Name = "file", FileName = filename };
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

            using var content = new MultipartFormDataContent();
            content.Add(content: fileContent, name: "image");

            var response = await apiService.FileUpload(content);
            PhotoUrl = response.Url;
        }
        catch (ApiException ex)
        {
            errorMessage = ex.Message;
        }
    }

    public async void UploadDocument()
    {
        try
        {
            string message = await userService.UpdatePhotoUrl(PhotoUrl);
            successMessage = message;
        }
        catch (ApiException ex)
        {
            errorMessage = ex.Message;
        }
    }
}
