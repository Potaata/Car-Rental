@page "/staff-rent-history"
@using System.Net.Http
@using System.Net.Http.Json
@using CarRental.BlazorWasm.Services.ItemService
@using Models.Enums

@inject RentHistoryService rentHistoryService

<div class="container">
    <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-lg-8 mb-5 mb-lg-0 text-center">
            <h3 style="font-family: Arial Rounded MT; padding: 10px 24px;">Rent History</h3>
        </div>
    </div>
</div>

<table class="table table-striped table-dark">
    <thead>
        <tr>
            <th scope="col">Car Model</th>
            <th scope="col">Rent Price</th>
            <th scope="col">Rent From</th>
            <th scope="col">Rent To</th>
            <th scope="col">Status</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var rent in allRentHistory)
        {
            <tr>
                <td>@rent.CarModel</td>
                <td>@rent.RentPrice</td>
                <td>@rent.FromDate</td>
                <td>@rent.ToDate</td>
                <td>@rent.Status</td>
                <td>
                    @if (rent.Status == StatusEnums.Approved)
                    {
                        <button class="btn btn-danger" @onclick="()=> MarkCarTaken(rent.Id)">Mark Taken</button>
                    }
                    else if (rent.Status == StatusEnums.Rented)
                    {
                        <button class="btn btn-danger" @onclick="() => ReturnCar(rent.Id)">Return Car</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    string errorMessage { get; set; }
    List<RentHistory> allRentHistory = new List<RentHistory>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            allRentHistory = await rentHistoryService.GetAll();
        }
        catch (ApiException ex)
        {
            errorMessage = ex.Message;
        }
        StateHasChanged();
    }

    private async void MarkCarTaken(int rentId)
    {
        try
        {
            await rentHistoryService.MarkCarTaken(rentId);
            await OnInitializedAsync();
        }catch(ApiException ex){
            errorMessage = ex.Message;
        }
    }

    private async void ReturnCar(int rentId)
    {
        try
        {
            await rentHistoryService.ReturnCar(rentId);
            await OnInitializedAsync();
        }
        catch (ApiException ex)
        {
            errorMessage = ex.Message;
        }
    }
}

