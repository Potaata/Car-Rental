@inherits LayoutComponentBase

@inject NavigationManager navManager;
@inject SessionService sessService;

<div class="page">
    @if (checkShowNavBar())
    {
        //if true, we show navbar
        <div class="sidebar">
            <NavMenu />
        </div>
    }

    <!--Render the rest of the body of the current URI!-->
    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>

</div>

@code {
    List<string> pagesWithoutNavBar = new List<string>
    {
        "login", "register"
    };
    List<string> pagesWithoutLogin = new List<string>
    {
        "login", "register", "home", "404"
    };

    List<string> pagesInaccessibleAfterLogin = new List<string>{
        "login", "register"
    };

    bool checkShowNavBar()
    {
        foreach (string page in pagesWithoutNavBar)
        {
            if (navManager.Uri.ToLower().EndsWith(page))
            {
                return false;
            }
        }
        return true;
    }

    protected async override Task OnInitializedAsync()
    {

        if (await checkRedirectToLogin())
        {
            navManager.NavigateTo("/login", true);
        }
        else if (sessService.Token != null)
        {
            foreach (string page in pagesInaccessibleAfterLogin)
            {
                if (navManager.Uri.ToLower().EndsWith(page))
                {
                    navManager.NavigateTo("/cars", true);
                }
            }
        }
    }

    async Task<bool> checkRedirectToLogin()
    {
        foreach (string page in pagesWithoutLogin)
        {
            if (navManager.Uri.ToLower().EndsWith(page))
            {
                return false;
            }
        }
        if (!(await sessService.IsAuthenticated()))
        {
            return true;
        }
        return false;
    }
}